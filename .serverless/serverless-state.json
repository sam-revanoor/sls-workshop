{
  "service": {
    "service": "workshop-samrevanoor",
    "serviceObject": {
      "name": "workshop-samrevanoor"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs12.x",
      "lambdaHashingVersion": "20201221",
      "stage": "sam",
      "deploymentBucket": "workshop-sls-deployment",
      "eventBridge": {
        "useCloudFormation": true
      },
      "environment": {
        "rest_api_url": {
          "Fn::Join": [
            "",
            [
              "https://",
              {
                "Ref": "ApiGatewayRestApi"
              },
              ".execute-api.us-east-1.amazonaws.com/sam"
            ]
          ]
        },
        "serviceName": "workshop-samrevanoor",
        "stage": "sam"
      },
      "region": "us-east-1",
      "versionFunctions": true,
      "deploymentBucketObject": {
        "name": "workshop-sls-deployment"
      },
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "GetDashindexLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/workshop-samrevanoor-sam-get-index"
            }
          },
          "GetDashrestaurantsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/workshop-samrevanoor-sam-get-restaurants"
            }
          },
          "SearchDashrestaurantsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/workshop-samrevanoor-sam-search-restaurants"
            }
          },
          "PlaceDashorderLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/workshop-samrevanoor-sam-place-order"
            }
          },
          "NotifyDashrestaurantLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/workshop-samrevanoor-sam-notify-restaurant"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "workshop-samrevanoor",
                        "sam",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-samrevanoor-sam*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-samrevanoor-sam*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "workshop-samrevanoor",
                    "sam",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "GetDashindexLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "workshop-sls-deployment",
                "S3Key": "serverless/workshop-samrevanoor/sam/1637936297978-2021-11-26T14:18:17.978Z/workshop-samrevanoor.zip"
              },
              "Handler": "functions/get-index.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "workshop-samrevanoor-sam-get-index",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "rest_api_url": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"rest_api_url\"]"
                  },
                  "serviceName": "workshop-samrevanoor",
                  "stage": "sam",
                  "restaurants_api": {
                    "Fn::Join": [
                      "",
                      [
                        "https://",
                        {
                          "Ref": "ApiGatewayRestApi"
                        },
                        ".execute-api.us-east-1.amazonaws.com/sam/restaurants"
                      ]
                    ]
                  },
                  "cognito_user_pool_id": {
                    "Ref": "CognitoUserPool"
                  },
                  "cognito_client_id": {
                    "Ref": "WebCognitoUserPoolClient"
                  },
                  "orders_api": {
                    "Fn::Join": [
                      "",
                      [
                        "https://",
                        {
                          "Ref": "ApiGatewayRestApi"
                        },
                        ".execute-api.us-east-1.amazonaws.com/sam/orders"
                      ]
                    ]
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "GetDashindexIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetDashindexIamRoleLambdaExecution",
              "GetDashindexLogGroup"
            ]
          },
          "GetDashrestaurantsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "workshop-sls-deployment",
                "S3Key": "serverless/workshop-samrevanoor/sam/1637936297978-2021-11-26T14:18:17.978Z/workshop-samrevanoor.zip"
              },
              "Handler": "functions/get-restaurants.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "workshop-samrevanoor-sam-get-restaurants",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "rest_api_url": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"rest_api_url\"]"
                  },
                  "serviceName": "workshop-samrevanoor",
                  "stage": "sam",
                  "restaurants_table": {
                    "Ref": "RestaurantsTable"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "GetDashrestaurantsIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetDashrestaurantsIamRoleLambdaExecution",
              "GetDashrestaurantsLogGroup"
            ]
          },
          "SearchDashrestaurantsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "workshop-sls-deployment",
                "S3Key": "serverless/workshop-samrevanoor/sam/1637936297978-2021-11-26T14:18:17.978Z/workshop-samrevanoor.zip"
              },
              "Handler": "functions/search-restaurants.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "workshop-samrevanoor-sam-search-restaurants",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "rest_api_url": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"rest_api_url\"]"
                  },
                  "serviceName": "workshop-samrevanoor",
                  "stage": "sam",
                  "restaurants_table": {
                    "Ref": "RestaurantsTable"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "SearchDashrestaurantsIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "SearchDashrestaurantsIamRoleLambdaExecution",
              "SearchDashrestaurantsLogGroup"
            ]
          },
          "PlaceDashorderLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "workshop-sls-deployment",
                "S3Key": "serverless/workshop-samrevanoor/sam/1637936297978-2021-11-26T14:18:17.978Z/workshop-samrevanoor.zip"
              },
              "Handler": "functions/place-order.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "workshop-samrevanoor-sam-place-order",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "rest_api_url": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"rest_api_url\"]"
                  },
                  "serviceName": "workshop-samrevanoor",
                  "stage": "sam",
                  "bus_name": {
                    "Ref": "EventBus"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "PlaceDashorderIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "PlaceDashorderIamRoleLambdaExecution",
              "PlaceDashorderLogGroup"
            ]
          },
          "NotifyDashrestaurantLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": "workshop-sls-deployment",
                "S3Key": "serverless/workshop-samrevanoor/sam/1637936297978-2021-11-26T14:18:17.978Z/workshop-samrevanoor.zip"
              },
              "Handler": "functions/notify-restaurant.handler",
              "Runtime": "nodejs12.x",
              "FunctionName": "workshop-samrevanoor-sam-notify-restaurant",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "rest_api_url": {
                    "$ref": "$[\"service\"][\"provider\"][\"environment\"][\"rest_api_url\"]"
                  },
                  "serviceName": "workshop-samrevanoor",
                  "stage": "sam",
                  "bus_name": {
                    "Ref": "EventBus"
                  },
                  "restaurant_notification_topic": {
                    "Ref": "RestaurantNotificationTopic"
                  }
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "NotifyDashrestaurantIamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "NotifyDashrestaurantIamRoleLambdaExecution",
              "NotifyDashrestaurantLogGroup"
            ]
          },
          "GetDashindexLambdaVersionYqPSCoTmnOm2VTo9OX4xFjeoZiUXv5chh62wKdpfA": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashindexLambdaFunction"
              },
              "CodeSha256": "hqGNwRkbh2Oyg0D8N6yqRfJU4edY2xyRow+1HIUyflw="
            }
          },
          "GetDashrestaurantsLambdaVersion2RgEqtRC24lPctWgoajY4tUcN0UCHlWgBYGKHy6vk": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetDashrestaurantsLambdaFunction"
              },
              "CodeSha256": "hqGNwRkbh2Oyg0D8N6yqRfJU4edY2xyRow+1HIUyflw="
            }
          },
          "SearchDashrestaurantsLambdaVersionaAWtv7RdGYTQTssHkUj9GhfTdbUU7lJUmLbDghI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "SearchDashrestaurantsLambdaFunction"
              },
              "CodeSha256": "hqGNwRkbh2Oyg0D8N6yqRfJU4edY2xyRow+1HIUyflw="
            }
          },
          "PlaceDashorderLambdaVersionUIr9qQHcolS5WQgcCdBHhEZ8JHaMuVdrImsa5jq8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "PlaceDashorderLambdaFunction"
              },
              "CodeSha256": "hqGNwRkbh2Oyg0D8N6yqRfJU4edY2xyRow+1HIUyflw="
            }
          },
          "NotifyDashrestaurantLambdaVersiontyHJ7V57MSC6qZPCsRjUnxdlLvHwTD766oAi8XhWo2M": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "NotifyDashrestaurantLambdaFunction"
              },
              "CodeSha256": "hqGNwRkbh2Oyg0D8N6yqRfJU4edY2xyRow+1HIUyflw="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "sam-workshop-samrevanoor",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceRestaurants": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "restaurants",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceRestaurantsSearch": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceRestaurants"
              },
              "PathPart": "search",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceOrders": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "orders",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDashindexLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetDashindexLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodRestaurantsGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRestaurants"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "AWS_IAM",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetDashrestaurantsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetDashrestaurantsLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodRestaurantsSearchPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceRestaurantsSearch"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "CognitoAuthorizerApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "SearchDashrestaurantsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "CognitoAuthorizerApiGatewayAuthorizer"
          },
          "ApiGatewayMethodOrdersPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceOrders"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "COGNITO_USER_POOLS",
              "AuthorizerId": {
                "Ref": "CognitoAuthorizerApiGatewayAuthorizer"
              },
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "PlaceDashorderLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": "CognitoAuthorizerApiGatewayAuthorizer"
          },
          "CognitoAuthorizerApiGatewayAuthorizer": {
            "Type": "AWS::ApiGateway::Authorizer",
            "Properties": {
              "AuthorizerResultTtlInSeconds": 300,
              "IdentitySource": "method.request.header.Authorization",
              "Name": "CognitoAuthorizer",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "Type": "COGNITO_USER_POOLS",
              "ProviderARNs": [
                {
                  "Fn::GetAtt": [
                    "CognitoUserPool",
                    "Arn"
                  ]
                }
              ]
            }
          },
          "ApiGatewayDeployment1637936281490": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "sam"
            },
            "DependsOn": [
              "ApiGatewayMethodGet",
              "ApiGatewayMethodRestaurantsGet",
              "ApiGatewayMethodRestaurantsSearchPost",
              "ApiGatewayMethodOrdersPost"
            ]
          },
          "GetDashindexLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashindexLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetDashrestaurantsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetDashrestaurantsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "SearchDashrestaurantsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "SearchDashrestaurantsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "PlaceDashorderLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "PlaceDashorderLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "Workshopsamrevanoorsamnotifyrestaurantrule1EventBridgeRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "EventBusName": {
                "Ref": "EventBus"
              },
              "EventPattern": {
                "source": [
                  "big-mouth"
                ],
                "detail-type": [
                  "order_placed"
                ]
              },
              "Name": "workshop-samrevanoor-sam-notify-restaurant-rule-1",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "NotifyDashrestaurantLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "workshop-samrevanoor-sam-notify-restaurant-rule-1-target"
                }
              ]
            }
          },
          "NotifyDashrestaurantEventBridgeLambdaPermission1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "Action": "lambda:InvokeFunction",
              "FunctionName": {
                "Ref": "NotifyDashrestaurantLambdaFunction"
              },
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn",
                    {
                      "Ref": "AWS::Partition"
                    },
                    "events",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    {
                      "Fn::Join": [
                        "/",
                        [
                          "rule",
                          {
                            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"Workshopsamrevanoorsamnotifyrestaurantrule1EventBridgeRule\"][\"Properties\"][\"EventBusName\"]"
                          },
                          "workshop-samrevanoor-sam-notify-restaurant-rule-1"
                        ]
                      ]
                    }
                  ]
                ]
              }
            }
          },
          "GetDashindexIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "workshop-samrevanoor",
                        "sam",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-samrevanoor-sam-get-index:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "execute-api:Invoke"
                        ],
                        "Resource": {
                          "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGatewayRestApi}/sam/GET/restaurants"
                        }
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "workshop-samrevanoor",
                    "sam",
                    "get-index",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "GetDashrestaurantsIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "workshop-samrevanoor",
                        "sam",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-samrevanoor-sam-get-restaurants:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:scan"
                        ],
                        "Resource": {
                          "Fn::GetAtt": [
                            "RestaurantsTable",
                            "Arn"
                          ]
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ssm:GetParameters*"
                        ],
                        "Resource": {
                          "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/workshop-samrevanoor/dev/get-restaurants/config"
                        }
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "workshop-samrevanoor",
                    "sam",
                    "get-restaurants",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "SearchDashrestaurantsIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "workshop-samrevanoor",
                        "sam",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-samrevanoor-sam-search-restaurants:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:scan"
                        ],
                        "Resource": {
                          "Fn::GetAtt": [
                            "RestaurantsTable",
                            "Arn"
                          ]
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "ssm:GetParameters*"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/workshop-samrevanoor/dev/search-restaurants/config"
                          },
                          {
                            "Fn::Sub": "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/workshop-samrevanoor/sam/search-restaurants/secretString"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "kms:Decrypt"
                        ],
                        "Resource": "arn:aws:kms:us-east-1:633946266320:key/8c8a0e53-93e2-4a72-b0e9-f4ccfc58c5db"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "workshop-samrevanoor",
                    "sam",
                    "search-restaurants",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "PlaceDashorderIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "workshop-samrevanoor",
                        "sam",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-samrevanoor-sam-place-order:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "events:PutEvents"
                        ],
                        "Resource": {
                          "Fn::GetAtt": [
                            "EventBus",
                            "Arn"
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "workshop-samrevanoor",
                    "sam",
                    "place-order",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "NotifyDashrestaurantIamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "workshop-samrevanoor",
                        "sam",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/workshop-samrevanoor-sam-notify-restaurant:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "events:PutEvents"
                        ],
                        "Resource": {
                          "Fn::GetAtt": [
                            "EventBus",
                            "Arn"
                          ]
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "sns:Publish"
                        ],
                        "Resource": {
                          "Ref": "RestaurantNotificationTopic"
                        }
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "workshop-samrevanoor",
                    "sam",
                    "notify-restaurant",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": []
            }
          },
          "RestaurantsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "name",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "name",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "CognitoUserPool": {
            "Type": "AWS::Cognito::UserPool",
            "Properties": {
              "UserPoolTags": {
                "Name": "sam"
              },
              "UserPoolName": "sam",
              "AliasAttributes": [
                "email"
              ],
              "UsernameConfiguration": {
                "CaseSensitive": false
              },
              "AutoVerifiedAttributes": [
                "email"
              ],
              "Policies": {
                "PasswordPolicy": {
                  "MinimumLength": 8,
                  "RequireLowercase": true,
                  "RequireNumbers": true,
                  "RequireUppercase": true,
                  "RequireSymbols": true
                }
              },
              "Schema": [
                {
                  "AttributeDataType": "String",
                  "Mutable": true,
                  "Name": "given_name",
                  "Required": true,
                  "StringAttributeConstraints": {
                    "MinLength": "1"
                  }
                },
                {
                  "AttributeDataType": "String",
                  "Mutable": true,
                  "Name": "family_name",
                  "Required": true,
                  "StringAttributeConstraints": {
                    "MinLength": "1"
                  }
                },
                {
                  "AttributeDataType": "String",
                  "Mutable": true,
                  "Name": "email",
                  "Required": true,
                  "StringAttributeConstraints": {
                    "MinLength": "1"
                  }
                }
              ]
            }
          },
          "WebCognitoUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "web",
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              },
              "ExplicitAuthFlows": [
                "ALLOW_USER_SRP_AUTH",
                "ALLOW_REFRESH_TOKEN_AUTH"
              ],
              "PreventUserExistenceErrors": "ENABLED"
            }
          },
          "ServerCognitoUserPoolClient": {
            "Type": "AWS::Cognito::UserPoolClient",
            "Properties": {
              "ClientName": "server",
              "UserPoolId": {
                "Ref": "CognitoUserPool"
              },
              "ExplicitAuthFlows": [
                "ALLOW_ADMIN_USER_PASSWORD_AUTH",
                "ALLOW_REFRESH_TOKEN_AUTH"
              ],
              "PreventUserExistenceErrors": "ENABLED"
            }
          },
          "ServiceUrlParameter": {
            "Type": "AWS::SSM::Parameter",
            "Properties": {
              "Type": "String",
              "Name": "/workshop-samrevanoor/sam/serviceUrl",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.us-east-1.amazonaws.com/sam"
                  ]
                ]
              }
            }
          },
          "EventBus": {
            "Type": "AWS::Events::EventBus",
            "Properties": {
              "Name": "order_events_sam_samrevanoor"
            }
          },
          "RestaurantNotificationTopic": {
            "Type": "AWS::SNS::Topic"
          },
          "E2eTestQueue": {
            "Type": "AWS::SQS::Queue",
            "Condition": "IsE2eTest",
            "Properties": {
              "MessageRetentionPeriod": 60,
              "VisibilityTimeout": 1
            }
          },
          "E2eTestQueuePolicy": {
            "Type": "AWS::SQS::QueuePolicy",
            "Condition": "IsE2eTest",
            "Properties": {
              "Queues": [
                {
                  "Ref": "E2eTestQueue"
                }
              ],
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "SQS:SendMessage",
                    "Resource": {
                      "Fn::GetAtt": [
                        "E2eTestQueue",
                        "Arn"
                      ]
                    },
                    "Condition": {
                      "ArnEquals": {
                        "aws:SourceArn": {
                          "Ref": "RestaurantNotificationTopic"
                        }
                      }
                    }
                  },
                  {
                    "Effect": "Allow",
                    "Principal": "*",
                    "Action": "SQS:SendMessage",
                    "Resource": {
                      "Fn::GetAtt": [
                        "E2eTestQueue",
                        "Arn"
                      ]
                    },
                    "Condition": {
                      "ArnEquals": {
                        "aws:SourceArn": {
                          "Fn::GetAtt": [
                            "E2eTestEventBridgeRule",
                            "Arn"
                          ]
                        }
                      }
                    }
                  }
                ]
              }
            }
          },
          "E2eTestSnsSubscription": {
            "Type": "AWS::SNS::Subscription",
            "Condition": "IsE2eTest",
            "Properties": {
              "Protocol": "sqs",
              "Endpoint": {
                "Fn::GetAtt": [
                  "E2eTestQueue",
                  "Arn"
                ]
              },
              "RawMessageDelivery": false,
              "Region": {
                "Ref": "AWS::Region"
              },
              "TopicArn": {
                "Ref": "RestaurantNotificationTopic"
              }
            }
          },
          "E2eTestEventBridgeRule": {
            "Type": "AWS::Events::Rule",
            "Condition": "IsE2eTest",
            "Properties": {
              "EventBusName": {
                "Ref": "EventBus"
              },
              "EventPattern": {
                "source": [
                  "big-mouth"
                ]
              },
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "E2eTestQueue",
                      "Arn"
                    ]
                  },
                  "Id": "e2eTestQueue",
                  "InputTransformer": {
                    "InputPathsMap": {
                      "source": "$.source",
                      "detailType": "$.detail-type",
                      "detail": "$.detail"
                    },
                    "InputTemplate": {
                      "Fn::Sub": "{\n  \"event\": {\n    \"source\": <source>,\n    \"detail-type\": <detailType>,\n    \"detail\": <detail>\n  },\n  \"eventBusName\": \"${EventBus}\"\n}\n"
                    }
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": "workshop-sls-deployment",
            "Export": {
              "Name": "sls-workshop-samrevanoor-sam-ServerlessDeploymentBucketName"
            }
          },
          "GetDashindexLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashindexLambdaVersionYqPSCoTmnOm2VTo9OX4xFjeoZiUXv5chh62wKdpfA"
            },
            "Export": {
              "Name": "sls-workshop-samrevanoor-sam-GetDashindexLambdaFunctionQualifiedArn"
            }
          },
          "GetDashrestaurantsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetDashrestaurantsLambdaVersion2RgEqtRC24lPctWgoajY4tUcN0UCHlWgBYGKHy6vk"
            },
            "Export": {
              "Name": "sls-workshop-samrevanoor-sam-GetDashrestaurantsLambdaFunctionQualifiedArn"
            }
          },
          "SearchDashrestaurantsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "SearchDashrestaurantsLambdaVersionaAWtv7RdGYTQTssHkUj9GhfTdbUU7lJUmLbDghI"
            },
            "Export": {
              "Name": "sls-workshop-samrevanoor-sam-SearchDashrestaurantsLambdaFunctionQualifiedArn"
            }
          },
          "PlaceDashorderLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "PlaceDashorderLambdaVersionUIr9qQHcolS5WQgcCdBHhEZ8JHaMuVdrImsa5jq8"
            },
            "Export": {
              "Name": "sls-workshop-samrevanoor-sam-PlaceDashorderLambdaFunctionQualifiedArn"
            }
          },
          "NotifyDashrestaurantLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "NotifyDashrestaurantLambdaVersiontyHJ7V57MSC6qZPCsRjUnxdlLvHwTD766oAi8XhWo2M"
            },
            "Export": {
              "Name": "sls-workshop-samrevanoor-sam-NotifyDashrestaurantLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/sam"
                ]
              ]
            },
            "Export": {
              "Name": "sls-workshop-samrevanoor-sam-ServiceEndpoint"
            }
          },
          "RestaurantsTableName": {
            "Value": {
              "Ref": "RestaurantsTable"
            }
          },
          "CognitoUserPoolId": {
            "Value": {
              "Ref": "CognitoUserPool"
            }
          },
          "CognitoUserPoolArn": {
            "Value": {
              "Fn::GetAtt": [
                "CognitoUserPool",
                "Arn"
              ]
            }
          },
          "CognitoUserPoolWebClientId": {
            "Value": {
              "Ref": "WebCognitoUserPoolClient"
            }
          },
          "CognitoUserPoolServerClientId": {
            "Value": {
              "Ref": "ServerCognitoUserPoolClient"
            }
          },
          "EventBusName": {
            "Value": {
              "Ref": "EventBus"
            }
          },
          "RestaurantNotificationTopicName": {
            "Value": {
              "Fn::GetAtt": [
                "RestaurantNotificationTopic",
                "TopicName"
              ]
            }
          },
          "RestaurantNotificationTopicArn": {
            "Value": {
              "Ref": "RestaurantNotificationTopic"
            }
          },
          "E2eTestQueueUrl": {
            "Condition": "IsE2eTest",
            "Value": {
              "Ref": "E2eTestQueue"
            }
          }
        },
        "Conditions": {
          "IsE2eTest": {
            "Fn::Equals": [
              "sam",
              "sam"
            ]
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "name": "samrevanoor",
      "export-env": {
        "overwrite": true
      },
      "exportOutputs": {
        "include": [
          "E2eTestQueueUrl",
          "CognitoUserPoolServerClientId"
        ],
        "output": {
          "file": "./.env-outputs"
        }
      }
    },
    "plugins": [
      "serverless-export-env",
      "serverless-export-outputs",
      "serverless-iam-roles-per-function"
    ],
    "pluginsData": {},
    "functions": {
      "get-index": {
        "handler": "functions/get-index.handler",
        "events": [
          {
            "http": {
              "path": "",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "environment": {
          "restaurants_api": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetDashindexLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"restaurants_api\"]"
          },
          "cognito_user_pool_id": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetDashindexLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"cognito_user_pool_id\"]"
          },
          "cognito_client_id": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetDashindexLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"cognito_client_id\"]"
          },
          "orders_api": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetDashindexLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"orders_api\"]"
          }
        },
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetDashindexIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "workshop-samrevanoor-sam-get-index",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetDashindexLambdaVersionYqPSCoTmnOm2VTo9OX4xFjeoZiUXv5chh62wKdpfA"
      },
      "get-restaurants": {
        "handler": "functions/get-restaurants.handler",
        "events": [
          {
            "http": {
              "path": "restaurants",
              "method": "get",
              "authorizer": {
                "type": "AWS_IAM",
                "managedExternally": false,
                "identitySource": "method.request.header.Authorization"
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "environment": {
          "restaurants_table": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetDashrestaurantsLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"restaurants_table\"]"
          }
        },
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetDashrestaurantsIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"GetDashrestaurantsIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          }
        ],
        "name": "workshop-samrevanoor-sam-get-restaurants",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "GetDashrestaurantsLambdaVersion2RgEqtRC24lPctWgoajY4tUcN0UCHlWgBYGKHy6vk"
      },
      "search-restaurants": {
        "handler": "functions/search-restaurants.handler",
        "events": [
          {
            "http": {
              "path": "restaurants/search",
              "method": "post",
              "authorizer": {
                "type": "COGNITO_USER_POOLS",
                "name": "CognitoAuthorizer",
                "arn": {
                  "Fn::GetAtt": [
                    "CognitoUserPool",
                    "Arn"
                  ]
                },
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "environment": {
          "restaurants_table": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SearchDashrestaurantsLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"restaurants_table\"]"
          }
        },
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SearchDashrestaurantsIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SearchDashrestaurantsIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"SearchDashrestaurantsIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][3]"
          }
        ],
        "name": "workshop-samrevanoor-sam-search-restaurants",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "SearchDashrestaurantsLambdaVersionaAWtv7RdGYTQTssHkUj9GhfTdbUU7lJUmLbDghI"
      },
      "place-order": {
        "handler": "functions/place-order.handler",
        "events": [
          {
            "http": {
              "path": "orders",
              "method": "post",
              "authorizer": {
                "type": "COGNITO_USER_POOLS",
                "name": "CognitoAuthorizer",
                "arn": {
                  "Fn::GetAtt": [
                    "CognitoUserPool",
                    "Arn"
                  ]
                },
                "managedExternally": false,
                "resultTtlInSeconds": 300,
                "identitySource": "method.request.header.Authorization",
                "claims": []
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "environment": {
          "bus_name": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PlaceDashorderLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"bus_name\"]"
          }
        },
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"PlaceDashorderIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          }
        ],
        "name": "workshop-samrevanoor-sam-place-order",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "PlaceDashorderLambdaVersionUIr9qQHcolS5WQgcCdBHhEZ8JHaMuVdrImsa5jq8"
      },
      "notify-restaurant": {
        "handler": "functions/notify-restaurant.handler",
        "events": [
          {
            "eventBridge": {
              "eventBus": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"Workshopsamrevanoorsamnotifyrestaurantrule1EventBridgeRule\"][\"Properties\"][\"EventBusName\"]"
              },
              "pattern": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"Workshopsamrevanoorsamnotifyrestaurantrule1EventBridgeRule\"][\"Properties\"][\"EventPattern\"]"
              }
            }
          }
        ],
        "environment": {
          "bus_name": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"NotifyDashrestaurantLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"bus_name\"]"
          },
          "restaurant_notification_topic": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"NotifyDashrestaurantLambdaFunction\"][\"Properties\"][\"Environment\"][\"Variables\"][\"restaurant_notification_topic\"]"
          }
        },
        "iamRoleStatements": [
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"NotifyDashrestaurantIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][1]"
          },
          {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"NotifyDashrestaurantIamRoleLambdaExecution\"][\"Properties\"][\"Policies\"][0][\"PolicyDocument\"][\"Statement\"][2]"
          }
        ],
        "name": "workshop-samrevanoor-sam-notify-restaurant",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs12.x",
        "vpc": {},
        "versionLogicalId": "NotifyDashrestaurantLambdaVersiontyHJ7V57MSC6qZPCsRjUnxdlLvHwTD766oAi8XhWo2M"
      }
    },
    "resources": {
      "Conditions": {
        "IsE2eTest": {
          "Fn::Equals": [
            "sam",
            "sam"
          ]
        }
      },
      "Resources": {
        "RestaurantsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "name",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "name",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "CognitoUserPool": {
          "Type": "AWS::Cognito::UserPool",
          "Properties": {
            "UserPoolTags": {
              "Name": "sam"
            },
            "UserPoolName": "sam",
            "AliasAttributes": [
              "email"
            ],
            "UsernameConfiguration": {
              "CaseSensitive": false
            },
            "AutoVerifiedAttributes": [
              "email"
            ],
            "Policies": {
              "PasswordPolicy": {
                "MinimumLength": 8,
                "RequireLowercase": true,
                "RequireNumbers": true,
                "RequireUppercase": true,
                "RequireSymbols": true
              }
            },
            "Schema": [
              {
                "AttributeDataType": "String",
                "Mutable": true,
                "Name": "given_name",
                "Required": true,
                "StringAttributeConstraints": {
                  "MinLength": "1"
                }
              },
              {
                "AttributeDataType": "String",
                "Mutable": true,
                "Name": "family_name",
                "Required": true,
                "StringAttributeConstraints": {
                  "MinLength": "1"
                }
              },
              {
                "AttributeDataType": "String",
                "Mutable": true,
                "Name": "email",
                "Required": true,
                "StringAttributeConstraints": {
                  "MinLength": "1"
                }
              }
            ]
          }
        },
        "WebCognitoUserPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "web",
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            },
            "ExplicitAuthFlows": [
              "ALLOW_USER_SRP_AUTH",
              "ALLOW_REFRESH_TOKEN_AUTH"
            ],
            "PreventUserExistenceErrors": "ENABLED"
          }
        },
        "ServerCognitoUserPoolClient": {
          "Type": "AWS::Cognito::UserPoolClient",
          "Properties": {
            "ClientName": "server",
            "UserPoolId": {
              "Ref": "CognitoUserPool"
            },
            "ExplicitAuthFlows": [
              "ALLOW_ADMIN_USER_PASSWORD_AUTH",
              "ALLOW_REFRESH_TOKEN_AUTH"
            ],
            "PreventUserExistenceErrors": "ENABLED"
          }
        },
        "ServiceUrlParameter": {
          "Type": "AWS::SSM::Parameter",
          "Properties": {
            "Type": "String",
            "Name": "/workshop-samrevanoor/sam/serviceUrl",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.us-east-1.amazonaws.com/sam"
                ]
              ]
            }
          }
        },
        "EventBus": {
          "Type": "AWS::Events::EventBus",
          "Properties": {
            "Name": "order_events_sam_samrevanoor"
          }
        },
        "RestaurantNotificationTopic": {
          "Type": "AWS::SNS::Topic"
        },
        "E2eTestQueue": {
          "Type": "AWS::SQS::Queue",
          "Condition": "IsE2eTest",
          "Properties": {
            "MessageRetentionPeriod": 60,
            "VisibilityTimeout": 1
          }
        },
        "E2eTestQueuePolicy": {
          "Type": "AWS::SQS::QueuePolicy",
          "Condition": "IsE2eTest",
          "Properties": {
            "Queues": [
              {
                "Ref": "E2eTestQueue"
              }
            ],
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": "SQS:SendMessage",
                  "Resource": {
                    "Fn::GetAtt": [
                      "E2eTestQueue",
                      "Arn"
                    ]
                  },
                  "Condition": {
                    "ArnEquals": {
                      "aws:SourceArn": {
                        "Ref": "RestaurantNotificationTopic"
                      }
                    }
                  }
                },
                {
                  "Effect": "Allow",
                  "Principal": "*",
                  "Action": "SQS:SendMessage",
                  "Resource": {
                    "Fn::GetAtt": [
                      "E2eTestQueue",
                      "Arn"
                    ]
                  },
                  "Condition": {
                    "ArnEquals": {
                      "aws:SourceArn": {
                        "Fn::GetAtt": [
                          "E2eTestEventBridgeRule",
                          "Arn"
                        ]
                      }
                    }
                  }
                }
              ]
            }
          }
        },
        "E2eTestSnsSubscription": {
          "Type": "AWS::SNS::Subscription",
          "Condition": "IsE2eTest",
          "Properties": {
            "Protocol": "sqs",
            "Endpoint": {
              "Fn::GetAtt": [
                "E2eTestQueue",
                "Arn"
              ]
            },
            "RawMessageDelivery": false,
            "Region": {
              "Ref": "AWS::Region"
            },
            "TopicArn": {
              "Ref": "RestaurantNotificationTopic"
            }
          }
        },
        "E2eTestEventBridgeRule": {
          "Type": "AWS::Events::Rule",
          "Condition": "IsE2eTest",
          "Properties": {
            "EventBusName": {
              "Ref": "EventBus"
            },
            "EventPattern": {
              "source": [
                "big-mouth"
              ]
            },
            "State": "ENABLED",
            "Targets": [
              {
                "Arn": {
                  "Fn::GetAtt": [
                    "E2eTestQueue",
                    "Arn"
                  ]
                },
                "Id": "e2eTestQueue",
                "InputTransformer": {
                  "InputPathsMap": {
                    "source": "$.source",
                    "detailType": "$.detail-type",
                    "detail": "$.detail"
                  },
                  "InputTemplate": {
                    "Fn::Sub": "{\n  \"event\": {\n    \"source\": <source>,\n    \"detail-type\": <detailType>,\n    \"detail\": <detail>\n  },\n  \"eventBusName\": \"${EventBus}\"\n}\n"
                  }
                }
              }
            ]
          }
        }
      },
      "Outputs": {
        "RestaurantsTableName": {
          "Value": {
            "Ref": "RestaurantsTable"
          }
        },
        "CognitoUserPoolId": {
          "Value": {
            "Ref": "CognitoUserPool"
          }
        },
        "CognitoUserPoolArn": {
          "Value": {
            "Fn::GetAtt": [
              "CognitoUserPool",
              "Arn"
            ]
          }
        },
        "CognitoUserPoolWebClientId": {
          "Value": {
            "Ref": "WebCognitoUserPoolClient"
          }
        },
        "CognitoUserPoolServerClientId": {
          "Value": {
            "Ref": "ServerCognitoUserPoolClient"
          }
        },
        "EventBusName": {
          "Value": {
            "Ref": "EventBus"
          }
        },
        "RestaurantNotificationTopicName": {
          "Value": {
            "Fn::GetAtt": [
              "RestaurantNotificationTopic",
              "TopicName"
            ]
          }
        },
        "RestaurantNotificationTopicArn": {
          "Value": {
            "Ref": "RestaurantNotificationTopic"
          }
        },
        "E2eTestQueueUrl": {
          "Condition": "IsE2eTest",
          "Value": {
            "Ref": "E2eTestQueue"
          }
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": {
        "$ref": "$[\"service\"][\"serviceObject\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/samairerevanoor/Desktop/Dev/sls/production-ready-serverless-workshop/.serverless/workshop-samrevanoor.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/workshop-samrevanoor/sam/1637936297978-2021-11-26T14:18:17.978Z",
    "artifact": "workshop-samrevanoor.zip"
  }
}